# Generated by Django 5.0.7 on 2024-12-19 15:30

from django.db import migrations, models
import django.db.models.deletion


def convert_album_field(apps, schema_editor):
    """
    Converte o campo album de CharField para ForeignKey
    Primeiro limpa os dados inválidos, depois cria a ForeignKey
    """
    Music = apps.get_model('music', 'Music')
    Album = apps.get_model('artists', 'Album')
    
    # Limpar dados inválidos no campo album
    Music.objects.filter(album__in=['-', '', None]).update(album=None)
    
    # Para cada música com album válido, criar um álbum se não existir
    for music in Music.objects.exclude(album__isnull=True).exclude(album__in=['-', '']):
        album_name = music.album
        if album_name:
            # Criar álbum se não existir
            album, created = Album.objects.get_or_create(
                name=album_name,
                artist=music.artist,
                defaults={
                    'is_active': True,
                    'featured': False
                }
            )
            # Atualizar a música para referenciar o álbum
            music.album_id = album.id
            music.save()


def reverse_convert_album_field(apps, schema_editor):
    """
    Reverte a conversão - converte ForeignKey para CharField
    """
    Music = apps.get_model('music', 'Music')
    
    # Converter ForeignKey de volta para string
    for music in Music.objects.exclude(album__isnull=True):
        music.album = music.album.name if music.album else None
        music.save()


class Migration(migrations.Migration):

    dependencies = [
        ('artists', '0005_album'),
        ('music', '0001_initial'),
    ]

    operations = [
        # Primeiro, adicionar o novo campo como nullable
        migrations.AddField(
            model_name='music',
            name='album_new',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='musics',
                to='artists.album',
                verbose_name='Álbum'
            ),
        ),
        
        # Executar a conversão dos dados
        migrations.RunPython(
            convert_album_field,
            reverse_convert_album_field,
        ),
        
        # Remover o campo antigo
        migrations.RemoveField(
            model_name='music',
            name='album',
        ),
        
        # Renomear o novo campo
        migrations.RenameField(
            model_name='music',
            old_name='album_new',
            new_name='album',
        ),
    ]
