name: 🏗️ Deploy Infrastructure with Terraform

on:
  push:
    branches: [main]
    paths: ['terraform/**']
  pull_request:
    branches: [main]
    paths: ['terraform/**']
  workflow_dispatch:

env:
  TF_VERSION: '1.6.0'
  DIGITALOCEAN_REGION: 'nyc3'

jobs:
  terraform-plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 📋 Terraform Init
        run: |
          cd terraform/environments/prod
          terraform init

      - name: 📋 Terraform Plan
        run: |
          cd terraform/environments/prod
          terraform plan -var="digitalocean_token=dummy" -var="ssh_key_fingerprint=dummy"

  terraform-apply:
    name: 🚀 Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    needs: []

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 📋 Terraform Init
        run: |
          cd terraform/environments/prod
          terraform init

      - name: 📋 Terraform Plan
        run: |
          cd terraform/environments/prod
          terraform plan -var="digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }}" \
                         -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}"

      - name: 🚀 Terraform Apply
        run: |
          cd terraform/environments/prod
          terraform apply -auto-approve \
                          -var="digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }}" \
                          -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}"

      - name: 📊 Get Terraform Outputs
        id: terraform-outputs
        run: |
          cd terraform/environments/prod
          echo "app_ips=$(terraform output -raw app_ips)" >> $GITHUB_OUTPUT

      - name: 🔍 Verify Deployment
        run: |
          echo "🏗️ Infrastructure deployed successfully!"
          echo "📱 App Servers: ${{ steps.terraform-outputs.outputs.app_ips }}"
          echo "🌐 Admin URL: https://ehitapp.com.br/admin/"
          echo "🔗 API URL: https://ehitapp.com.br/api/"

      - name: 🏥 Health Check
        run: |
          echo "⏳ Waiting for services to be ready..."
          sleep 60
          
          # Test application
          if curl -f https://ehitapp.com.br/admin/ > /dev/null 2>&1; then
            echo "✅ Application is accessible!"
          else
            echo "⚠️ Application may still be starting - check manually"
          fi

  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 🧹 Cleanup
        run: |
          echo "🧹 Cleanup completed"
          echo "📊 Check deployment status at: https://github.com/${{ github.repository }}/actions"
