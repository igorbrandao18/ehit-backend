name: 🚀 Simple Deploy EHIT Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    - name: 🔑 Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "Host 165.227.180.118" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config

    - name: 🔍 Test Connection
      run: |
        echo "🔍 Testing SSH connection..."
        ssh root@165.227.180.118 "echo '✅ SSH connection successful!'"

    - name: 📥 Git Clone
      run: |
        echo "📥 Cloning repository..."
        ssh root@165.227.180.118 "
          # Remove old directory
          rm -rf /opt/ehit_backend
          
          # Clone fresh repository
          git clone https://github.com/igorbrandao18/ehit-backend.git /opt/ehit_backend
          
          echo '✅ Repository cloned successfully!'
          echo '📁 Location: /opt/ehit_backend'
        "

    - name: 🧹 Smart Docker Cleanup
      run: |
        echo "🧹 Smart Docker cleanup (preserving database)..."
        ssh root@165.227.180.118 "
          # Stop only ehit containers
          echo '🛑 Stopping ehit containers...'
          docker stop ehit_backend_prod ehit_postgres_prod ehit_redis_prod 2>/dev/null || true
          
          # Remove only ehit containers
          echo '🗑️ Removing ehit containers...'
          docker rm ehit_backend_prod ehit_postgres_prod ehit_redis_prod 2>/dev/null || true
          
          # Remove only ehit images (keep database volume)
          echo '🗑️ Removing ehit images...'
          docker rmi prod-web 2>/dev/null || true
          
          # Clean unused images and containers (but preserve ALL volumes)
          echo '🧹 Cleaning unused resources (preserving ALL volumes)...'
          docker system prune -f --volumes=false
          
          echo '✅ Smart cleanup completed (database preserved)!'
        "

    - name: 🚀 Deploy with Docker
      run: |
        echo "🚀 Deploying with Docker Compose..."
        ssh root@165.227.180.118 "
          cd /opt/ehit_backend
          
          # Build and start containers
          echo '🔧 Building and starting containers...'
          docker-compose -f docker/prod/docker-compose.yml up -d --build
          
          # Wait for services to be ready
          echo '⏳ Waiting for services to fully initialize...'
          sleep 60
          
          # Check container status
          echo '📊 Container status:'
          docker-compose -f docker/prod/docker-compose.yml ps
          
          echo '✅ Docker deployment completed!'
          echo '🌐 Backend available at: http://165.227.180.118:3030'
        "

    - name: 🔍 Verify Deployment
      run: |
        echo "🔍 Verifying deployment..."
        ssh root@165.227.180.118 "
          echo '📊 Docker containers status:'
          docker ps -a
          
          echo '🌐 Testing port 3030:'
          curl -f http://localhost:3030/health || echo '❌ Port 3030 not responding'
          
          echo '📁 Checking code location:'
          ls -la /opt/ehit_backend/
          
          echo '🔧 Docker compose status:'
          cd /opt/ehit_backend && docker-compose -f docker/prod/docker-compose.yml ps
          
          echo '📋 Backend container logs:'
          docker logs ehit_backend_prod --tail 20
        "

    - name: 🔄 Restart Services
      run: |
        echo "🔄 Restarting services to fix 502 errors..."
        ssh root@165.227.180.118 "
          cd /opt/ehit_backend
          
          echo '🛑 Stopping all services...'
          docker-compose -f docker/prod/docker-compose.yml stop
          
          echo '⏳ Waiting 10 seconds...'
          sleep 10
          
          echo '🚀 Starting all services...'
          docker-compose -f docker/prod/docker-compose.yml start
          
          echo '⏳ Waiting 30 seconds for services to initialize...'
          sleep 30
          
          echo '🔄 Restarting backend service specifically...'
          docker-compose -f docker/prod/docker-compose.yml restart web
          
          echo '⏳ Waiting 20 seconds for backend to fully restart...'
          sleep 20
          
          echo '📊 Final container status:'
          docker-compose -f docker/prod/docker-compose.yml ps
          
          echo '🌐 Testing health endpoint:'
          curl -f http://localhost:3030/health || echo '❌ Health check failed'
          
          echo '📋 Backend logs after restart:'
          docker logs ehit_backend_prod --tail 30
        "

    - name: ✅ Deploy Complete
      run: |
        echo "✅ Deploy completed successfully!"
        echo "🌐 Backend running at: http://165.227.180.118:3030"
        echo "📁 Code available at: /opt/ehit_backend"
        echo "🔄 Services restarted to fix 502 errors"