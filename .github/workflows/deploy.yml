name: 🚀 Simple Deploy EHIT Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    - name: 🔑 Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "Host 165.227.180.118" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config

    - name: 🔍 Test Connection
      run: |
        echo "🔍 Testing SSH connection..."
        ssh root@165.227.180.118 "echo '✅ SSH connection successful!'"

    - name: 📥 Git Clone
      run: |
        echo "📥 Cloning repository..."
        ssh root@165.227.180.118 "
          # Remove old directory
          rm -rf /opt/ehit_backend
          
          # Clone fresh repository
          git clone https://github.com/igorbrandao18/ehit-backend.git /opt/ehit_backend
          
          echo '✅ Repository cloned successfully!'
          echo '📁 Location: /opt/ehit_backend'
        "

    - name: 🧹 Clean Docker
      run: |
        echo "🧹 Cleaning Docker containers, volumes and images..."
        ssh root@165.227.180.118 "
          # Stop all containers
          echo '🛑 Stopping all containers...'
          docker stop \$(docker ps -aq) 2>/dev/null || true
          
          # Remove all containers
          echo '🗑️ Removing all containers...'
          docker rm \$(docker ps -aq) 2>/dev/null || true
          
          # Remove all images
          echo '🗑️ Removing all images...'
          docker rmi \$(docker images -aq) 2>/dev/null || true
          
          # Remove all volumes
          echo '🗑️ Removing all volumes...'
          docker volume rm \$(docker volume ls -q) 2>/dev/null || true
          
          # Clean system
          echo '🧹 System cleanup...'
          docker system prune -a --volumes -f
          
          echo '✅ Docker cleanup completed!'
        "

    - name: 🚀 Deploy with Docker
      run: |
        echo "🚀 Deploying with Docker Compose..."
        ssh root@165.227.180.118 "
          cd /opt/ehit_backend
          
          # Build and start containers
          echo '🔧 Building and starting containers...'
          docker-compose -f docker/prod/docker-compose.yml up -d --build
          
          # Wait for services to be ready
          echo '⏳ Waiting for services...'
          sleep 30
          
          # Check container status
          echo '📊 Container status:'
          docker-compose -f docker/prod/docker-compose.yml ps
          
          echo '✅ Docker deployment completed!'
          echo '🌐 Backend available at: http://165.227.180.118:3030'
        "

    - name: ✅ Deploy Complete
      run: |
        echo "✅ Deploy completed successfully!"
        echo "🌐 Backend running at: http://165.227.180.118:3030"
        echo "📁 Code available at: /opt/ehit_backend"