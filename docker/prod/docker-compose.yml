# Docker Compose para produção
# Uso: docker-compose -f docker/prod/docker-compose.yml up -d --build

services:
  # Banco de dados PostgreSQL para produção
  db:
    image: postgres:15-alpine
    container_name: ehit_postgres
    environment:
      POSTGRES_DB: ehit_db
      POSTGRES_USER: ehit_user
      POSTGRES_PASSWORD: ehit_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ehit_network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: ehit_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ehit_network
    restart: unless-stopped

  # Aplicação Django
  web:
    build:
      context: ../..
      dockerfile: docker/prod/Dockerfile
    container_name: ehit_backend
    command: >
      sh -c "mkdir -p /app/logs &&
             git clone https://github.com/igorbrandao18/ehit-backend.git /tmp/ehit_backend &&
             cp -r /tmp/ehit_backend/* /app/ &&
             rm -rf /tmp/ehit_backend &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn ehit_backend.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "3030:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=django-insecure-production-key-change-this-in-production
      - DATABASE_URL=postgresql://ehit_user:ehit_password@db:5432/ehit_db
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=prod.ehitapp.com.br,165.227.180.118,localhost
      - SECURE_SSL_REDIRECT=True
      - SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')
      - SESSION_COOKIE_SECURE=True
      - CSRF_COOKIE_SECURE=True
    depends_on:
      - db
      - redis
    networks:
      - ehit_network
    restart: unless-stopped

  # Proxy reverso será configurado externamente na porta 3030

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  ehit_network:
    driver: bridge