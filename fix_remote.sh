#!/bin/bash

SERVER="165.227.180.118"
echo "üîß EHIT BACKEND - CORRE√á√ÉO AUTOM√ÅTICA VIA SSH"
echo "=============================================="
echo ""

echo "üì° Conectando ao servidor $SERVER..."
echo ""

# 1. Verificar status atual
echo "üìä 1. STATUS ATUAL DOS CONTAINERS:"
ssh root@$SERVER "cd /opt/ehit_backend && docker-compose -f docker/prod/docker-compose.yml ps"
echo ""

# 2. Ver logs de erro
echo "üîç 2. LOGS DE ERRO:"
ssh root@$SERVER "cd /opt/ehit_backend && echo '---WEB LOGS---' && docker-compose -f docker/prod/docker-compose.yml logs --tail=10 web && echo '---NGINX LOGS---' && docker-compose -f docker/prod/docker-compose.yml logs --tail=10 nginx"
echo ""

# 3. Parar containers
echo "üõë 3. PARANDO CONTAINERS..."
ssh root@$SERVER "cd /opt/ehit_backend && docker-compose -f docker/prod/docker-compose.yml down"
echo ""

# 4. Limpar sistema
echo "üóëÔ∏è 4. LIMPANDO SISTEMA..."
ssh root@$SERVER "docker system prune -f"
echo ""

# 5. Atualizar c√≥digo
echo "üì• 5. ATUALIZANDO C√ìDIGO..."
ssh root@$SERVER "cd /opt/ehit_backend && git pull origin main"
echo ""

# 6. Rebuild completo
echo "üî® 6. REBUILD COMPLETO..."
ssh root@$SERVER "cd /opt/ehit_backend && docker-compose -f docker/prod/docker-compose.yml up -d --build --force-recreate --no-deps"
echo ""

# 7. Aguardar inicializa√ß√£o
echo "‚è≥ 7. AGUARDANDO INICIALIZA√á√ÉO..."
sleep 30
echo ""

# 8. Verificar status final
echo "üìä 8. STATUS FINAL:"
ssh root@$SERVER "cd /opt/ehit_backend && docker-compose -f docker/prod/docker-compose.yml ps"
echo ""

# 9. Teste final
echo "üåê 9. TESTE FINAL:"
ssh root@$SERVER "curl -f http://prod.ehitapp.com.br/health/ && echo '‚úÖ SITE FUNCIONANDO!' || echo '‚ùå AINDA COM PROBLEMAS'"
echo ""

echo "üéâ CORRE√á√ÉO CONCLU√çDA!"
echo "Se ainda houver problemas, execute: ssh root@$SERVER './debug_502.sh'"
